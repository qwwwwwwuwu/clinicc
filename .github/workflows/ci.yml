name: CI Pipeline

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      shell: pwsh
      env:
        PYTHONUTF8: 1
        PYTHONIOENCODING: utf-8
      run: |
        python -c "import sys; print(f'Python IO encoding: {sys.stdout.encoding}')"
        pytest -v --capture=tee-sys --color=no
      
    env:
      TEST_DATABASE_URL: "postgresql://test:test@localhost/test"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Run typecheck
      run: |
        pip install mypy types-psycopg2-binary
        mypy app       